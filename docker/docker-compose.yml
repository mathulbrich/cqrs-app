version: '3.7'

networks:
  default:

services:
  cqrs-app:
    container_name: cqrs-app
    image: cqrs-app-dev:latest
    build:
      context: ./
      dockerfile: ./Dockerfile
      target: dev
    depends_on:
      - dynamodb
    environment:
      NODE_ENV: dev
    ports:
      - "3000:3000"
      - "9229:9229"
    volumes:
      - "../:/usr/app"
    networks:
      - default

  dynamodb:
    command: "-jar DynamoDBLocal.jar -sharedDb -dbPath /var/lib/dynamodb/ -cors http://localhost:8080"
    container_name: dynamodb
    image: amazon/dynamodb-local:latest
    networks:
      - default
    ports:
      - 8000:8000
    user: root
    volumes:
      - dynamodb:/var/lib/dynamodb/

  dynamodb-manager:
    image: taydy/dynamodb-manager
    container_name: dynamodb-manager
    ports:
      - "8080:80"
    networks:
      - default

  elasticmq:
    container_name: elasticmq
    image: softwaremill/elasticmq-native
    networks:
      - default
    ports:
      - 9324:9324
      - 9325:9325
    volumes:
      - ./elasticmq.conf:/opt/elasticmq.conf
  
  minio:
    command: server --console-address ":9001" /data
    container_name: minio
    environment:
      MINIO_ROOT_USER: cqrsappaccesskeyid
      MINIO_ROOT_PASSWORD: cqrsappsecretaccesskey
    healthcheck:
      test: ["CMD", "curl", "-fs", "127.0.0.1:9000/minio/health/live"]
    image: minio/minio
    ports:
      - 9000:9000
      - 9001:9001
    networks:
      - default
    volumes:
      - minio_data:/data
      - minio_config:/root/.minio

volumes:
  dynamodb:
  minio_config:
  minio_data: